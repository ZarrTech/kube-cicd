---
# Source: vprofilecharts/templates/secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: vprosecret
  labels:
    name: vprosecret
type: Opaque
data:
  db-pass: YWRtaW4xMjM=
  rmq-pass: dGVzdA==
---
# Source: vprofilecharts/templates/dbpvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
meatadata:
  name: vprodb-pvc
  labels:
    name: vprodb-pvc
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resoiurces:
    requests:
      storage: 3Gi
---
# Source: vprofilecharts/templates/appsvc.yml
apiVersion: v1
kind: Service
metadata:
  name: vproapp-svc
  labels:
    name: vproapp-svc
spec:
    selector:
      app: vproapp
    ports:
    - name: vproapp-svc-port
      protocol: TCP
      port: 8080
      targetPort: vproapp-port
    type: ClusterIP
---
# Source: vprofilecharts/templates/dbsvc.yml
apiVersion: v1
kind: Service
metadata:
  name: vprodb-svc
  labels:
    name: vprodb-svc
spec:
    selector:
      app: vprodb
    ports:
    - name: vprodb-svc-port
      protocol: TCP
      port: 3306
      targetPort: vprodb-port
    type: ClusterIP
---
# Source: vprofilecharts/templates/mcsvc.yml
apiVersion: v1
kind: Service
metadata:
  name: vprocache01
spec:
  ports:
  - port: 11211
    targetPort: vpromc-port
    protocol: TCP
  selector:
    app: vpromc 
  type: ClusterIP
---
# Source: vprofilecharts/templates/rmqsvc.yml
apiVersion: v1
kind: Service
metadata:
  name: vpromq01
spec:
  ports:
  - port: 5672
    targetPort: vpromq01-port
    protocol: TCP
  selector:
    app: vpromq01
  type: ClusterIP
---
# Source: vprofilecharts/templates/appdeploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vproapp
  labels:
    name: vproapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vproapp
  template:
    metadata:
      labels:
        app: vproapp
    spec:
      containers:
      - name: vproapp
        image: zarrcloud/vprofileapp
        imagePullPolicy: Always
        ports:
        - name: vproapp-port
          containerPort: 8080
      initContainers:
      - name: init-mydb
        image: busybox
        command: ['sh', '-c', 'until nslookup vprodb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done;']
      - name: init-memcache
        image: busybox
        command: ['sh', '-c', 'until nslookup vprocache01.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done;']
---
# Source: vprofilecharts/templates/dbdeploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vprodb
  labels:
    name: vprodb
spec:
  selector:
    matchLabels:
      app: vprodb
  replicas: 1
  template:
    metadata:
      labels:
        app: vprodb
    spec:
      containers:
      - name: vprodb
        image: zarrcloud/vprofiledb
        imagePullPolicy: Always
        volumeMounts:
        - name: vprodb-data
          mountPath: /var/lib/mysql
        ports:
        - name: vprodb-port
          containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vprodb-secret
              key: db-pass
              
    volumes:
     - name: vprodb-data
       persistentVolumeClaim:
         claimName: vprodb-pvc

    initContainers:
        - name: busybox
          image: busybox:latest
          args: ["rm", "-rf", "/var/lib/mysql/lost+found"]
          volumeMounts:
            - name: vpro-db-data
              mountPath: /var/lib/mysql
---
# Source: vprofilecharts/templates/mcdeploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpromc
  labels:
    app: vpromc
spec:
  selector:
    matchLabels:
      app: vpromc
  replicas: 1
  template:
    metadata:
      labels:
        app: vpromc
    spec:
      containers:
      - name: vpromc
        image: memcached
        ports:
        - name: vpromc-port
          containerPort: 11211
---
# Source: vprofilecharts/templates/rmqdeploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpromq01
  labels:
    app: vpromq01
spec:
  selector:
    matchLabels:
      app: vpromq01
  replicas: 1
  template:
    metadata:
      labels:
        app: vpromq01
    spec:
      containers:
      - name: vpromq01
        image: rabbitmq
        ports:
        - name: vpromq01-port
          containerPort: 5672
        env: 
         - name: RABBITMQ_DEFAULT_PASS
           valueFrom:
             secretKeyRef:
               name: app-secret
               key: rmq-pass
         - name: RABBITMQ_DEFAULT_USER
           value: "test"
---
# Source: vprofilecharts/templates/appingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vproapp-ingress
  labels:
    name: vproapp-ingress
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
   - host: vproapp.lazaai.xyz
     http:
       paths:
       - path: /
         pathType: Prefix
         backend:
           service:
             name: vproapp-svc
             port:
               number: 8080
